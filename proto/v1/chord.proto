syntax = "proto3";

package chord.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

<<<<<<< HEAD
service Chord {
=======
service ChordApi {
>>>>>>> update proto rpc spec
    rpc GetNode (EmptyRequest) returns (Node) {
        option (google.api.http) = {
            get: "/v1/node"
        };
    }

    rpc UpdateNode (UpdateNodeRequest) returns (Node) {
        option (google.api.http) = {
            patch: "/v1/node"
        };
    }

    rpc ListKeys (ListKeysRequest) returns (ListKeysResponse) {
        option (google.api.http) = {
            get: "/v1/keys"
        };
    }

    rpc GetKey (GetKeyRequest) returns (Key) {
        option (google.api.http) = {
            get: "/v1/{name=keys/*}"
        };
    }

    rpc CreateKey (CreateKeyRequest) returns (Key) {
        option (google.api.http) = {
            post: "/v1/keys"
        };
    }

    rpc UpdateKey (UpdateKeyRequest) returns (Key) {
        option (google.api.http) = {
            patch: "/v1/{name=keys/*}"
        };
    }

    // fixme: this should use google.protobuf.Empty
    // https://github.com/tower-rs/tower-grpc/issues/81
    rpc DeleteKey (DeleteKeyRequest) returns (EmptyResponse) {
        option (google.api.http) = {
            delete: "/v1/{name=keys/*}"
        };
    }
}

///

message UpdateNodeRequest {
    Node node = 1;
    google.protobuf.FieldMask update_mask = 2;
}

message ListKeysRequest {
    // Reserved for "parent"
    reserved 1;
    int32 page_size = 2;
    string page_token = 3;
    int32 total_size = 4;
}

message ListKeysResponse {
    repeated Key keys = 1;
    string next_page_token = 2;
}

message GetKeyRequest {
    string name = 1;
}

message CreateKeyRequest {
    Key key = 1;
}

message UpdateKeyRequest {
    Key key = 1;
    google.protobuf.FieldMask update_mask = 2;
}

message DeleteKeyRequest {
    Key key = 1;
}

///

message Node {
    string name = 1;
    RunState state = 2;

    Address predecessor = 3;
<<<<<<< HEAD
    Routes routing_table = 4;
=======
    repeated Route routes = 4;
>>>>>>> update proto rpc spec
    repeated Address successors = 5;
}

enum RunState {
    WAITING  = 0;
    READY    = 1;
    RUNNING  = 2;
    DISABLED = 3;
}

message Address {
    Family family = 1;
    string addr = 2;
}

enum Family {
    UNIX = 0;
    INET = 1;
}

message Routes {
    repeated Entry entries = 1;
}

message Entry {
    Address addr = 1;
    string start_key = 2;
    string end_key = 3;
}

message Key {
    // Output only
    google.protobuf.Timestamp create_time = 1;
    // Output only
    google.protobuf.Timestamp update_time = 2;
    // Output only
    Address node = 3;

    string name = 4;
    bytes data = 5;
    map<string, string> labels = 6;
}

message EmptyRequest {}
message EmptyResponse {}
